<?php
/**
 * Blank Space Element
 *
 * Please do not edit this file. This file is part of the CyberChimps Framework and all modifications
 * should be made in a child theme.
 *
 * @category CyberChimps Framework
 * @package  Framework
 * @since    1.0
 * @author   CyberChimps
 * @license  http://www.opensource.org/licenses/gpl-license.php GPL v3.0 (or later)
 * @link     http://www.cyberchimps.com/
 */
// Don't load directly
if ( ! defined( 'ABSPATH' ) ) {
	die( '-1' );
}

if ( ! class_exists( 'CyberChimpsBlankSpace' ) ) {

	class CyberChimpsBlankSpace {

		protected static $instance;
		public $options;

		/* Static Singleton Factory Method */

		public static function instance() {
			if ( ! isset( self::$instance ) ) {
				$className = __CLASS__;
				self::$instance = new $className;
			}

			return self::$instance;
		} //end of instance

		/**
		 * Initializes plugin variables and sets up WordPress hooks/actions.
		 *
		 * @return void
		 */
		protected function __construct() {

			add_action( 'blank_space', array( $this, 'render_display' ) );
			add_action( 'init', array( $this, 'meta_box' ) );

			$this->options = get_option( 'cyberchimps_options' );
		} //end of construct

		public function render_display() {

			global $post;

			if ( is_page() ) 
			{
				$blank_space_height =	get_post_meta( $post->ID, 'blank_space', true );
			}
			else
			{
				$blank_space_height =	$this->options[ 'blank_space' ];
			}

			?>
				<div id="blank_space_container" class="row">
					<div id="blank_space" class="col-lg-12">
						<div class="blankspace-content" style="height:<?php echo $blank_space_height; ?>px" >
						</div>
					</div>
				</div>
			<?php
		} //end of render_display

		public function meta_box() {
			$page_fields = array(
				array(
					'type' => 'text',
					'id' => 'blank_space',
					'std'      => apply_filters('blank_space_default','100'),
					'class' => '',
					'name' => __( 'Blank Space', 'cyberchimps_elements' ),
					'desc' => __( 'Enter the height of blank space here', 'cyberchimps_elements' )
				)
			);
			/*
			 * configure your meta box
			 */
			$page_config = array(
				'id' => 'blank_space_options', // meta box id, unique per meta box
				'title' => __( 'Blank Space', 'cyberchimps_elements' ), // meta box title
				'pages' => array( 'page' ), // post types, accept custom post types as well, default is array('post'); optional
				'context' => 'normal', // where the meta box appear: normal (default), advanced, side; optional
				'priority' => 'high', // order of meta box: high (default), low; optional
				'fields' => apply_filters( 'cyberchimps_blank_space_metabox_fields', $page_fields, 'blank_space' ), // list of meta fields (can be added by field arrays)
				'local_images' => false, // Use local or hosted images (meta box images for add/remove)
				'use_with_theme' => true //change path if used with theme set to true, false for a plugin or anything else for a custom path(default false).
			);

			/*
			 * Initiate your meta box
			 */
			$page_meta = new Cyberchimps_Meta_Box( $page_config );
		}

	}
}
CyberChimpsBlankSpace::instance();
